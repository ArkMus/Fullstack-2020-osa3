{"version":3,"sources":["components/Person.js","components/Filter.js","components/PersonForm.js","services/PhonebookService.js","components/Notification.js","App.js","index.js"],"names":["Person","props","name","number","onClick","handleDelete","PersonList","persons","search","console","log","newPersons","concat","forEach","element","toLowerCase","includes","push","map","i","key","id","Filter","handleSearchChange","value","onChange","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","baseUrl","axios","get","newObject","post","delete","put","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setSearch","Message","setMessage","setClassName","useEffect","PhonebookService","then","response","data","event","target","preventDefault","add","persId","pers","personObject","setTimeout","window","confirm","person","catch","error","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed7fb367.chunk.js","sourcesContent":["import React from \"react\"\n\nconst PersonList = ({ persons, search, handleDelete }) => {\n    console.log(persons);\n    console.log(search);\n    let newPersons = []\n    if(search === ''){\n        newPersons = persons.concat()\n    }else{\n        persons.forEach(element => {\n            if(element.name.toLowerCase().includes(search.toLowerCase())){\n                newPersons.push(element)\n            }        \n        });\n    }\n\n    return (\n        <div>\n            {newPersons.map((newPersons, i) =>\n                <Person key={i} name={newPersons.name} number={newPersons.number} handleDelete={() => handleDelete(newPersons.id, newPersons.name)}/>)}\n        </div>\n    )\n}\n\nconst Person = (props) => {\n    return (\n        <div>\n            {props.name} {props.number}\n            <button onClick={props.handleDelete}>delete</button>\n        </div>\n    )\n}\n\nexport default PersonList","import React from 'react'\n\nconst Filter = ({ search, handleSearchChange }) => {\n    return (\n        <div>\n            <form>\n                filter shown with <input value={search} onChange={handleSearchChange} />\n            </form>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, newNumber, handleNameChange, handleNumberChange }) => {\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input value={newName}\n                    onChange={handleNameChange} />\n            </div>\n            <div>\n                number: <input value={newNumber}\n                    onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/api/persons'\nconst baseUrl = 'https://dry-oasis-36257.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst remove = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n  }\n\nexport default {getAll, create, remove, update }","import React from 'react'\n\nconst Notification = ({ message, className }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonList from './components/Person'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport PhonebookService from './services/PhonebookService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [search, setSearch] = useState('')\n    const [Message, setMessage] = useState(null)\n    const [className, setClassName] = useState(\"normalMessage\")\n\n    useEffect(() => {\n        console.log('effect')\n        PhonebookService\n            .getAll()\n            .then(response => {\n                console.log('promise fulfilled')\n                setPersons(response.data)\n            })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        let add = true\n        let persId = 0\n\n        persons.forEach((pers) => {\n            if (pers.name === newName) {\n                add = false\n                persId = pers.id\n            }\n        })\n\n        const personObject = { name: newName, number: newNumber }\n\n        if (add) {\n            PhonebookService\n                .create(personObject)\n                .then(response => {\n                    setPersons(persons.concat(response.data))\n                })\n\n            setClassName(\"normalMessage\")\n            setMessage(`Added ${newName}`)\n            setTimeout(() => {\n                setMessage(null)\n            }, 5000)\n\n        } else {\n            let result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n\n            if (result) {\n                PhonebookService.update(persId, personObject)\n                    .then(response => {\n                        setPersons(persons.map(person => person.id !== persId ? person : response.data))\n                    })\n                    .catch(error => {\n                        setClassName(\"error\")\n                        setMessage(\n                            `Information of ${newName} has already been removed from the server`\n                        )\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 5000)\n                    })\n\n                setClassName(\"normalMessage\")\n                setMessage(`Updated number for ${newName}`)\n                setTimeout(() => {\n                    setMessage(null)\n                }, 5000)\n\n            }\n        }\n\n        setNewName('')\n        setNewNumber('')\n        setClassName(\"normalMessage\")\n    }\n\n    const handleNameChange = (event) => {\n        console.log(event.target.value)\n        setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        console.log(event.target.value)\n        setNewNumber(event.target.value)\n    }\n\n    const handleSearchChange = (event) => {\n        console.log(event.target.value)\n        setSearch(event.target.value)\n    }\n\n    const handleDelete = (id, name) => {\n        let result = window.confirm(`Delete ${name} ?`);\n\n        if (result) {\n            let newPersons = persons.filter((value) => {\n                return value.id !== id\n            })\n            PhonebookService.remove(id)\n                .then(setPersons(newPersons))\n\n            setClassName(\"normalMessage\")\n            setMessage(`Removed ${newName}`)\n            setTimeout(() => {\n                setMessage(null)\n            }, 5000)\n        }\n\n        console.log(`Objects id is: ${id}`);\n\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n\n            <Notification message={Message} className={className} />\n\n            <Filter search={search} handleSearchChange={handleSearchChange} />\n\n            <h3>add a new</h3>\n            <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n\n            <h3>Numbers</h3>\n            <PersonList persons={persons} search={search} handleDelete={handleDelete} />\n        </div>\n\n    )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}